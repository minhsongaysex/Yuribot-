const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');
const axios = require('axios');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('checkbot')
        .setDescription('Ki·ªÉm tra ƒë·ªô tr·ªÖ c·ªßa bot, th√¥ng tin server, s·ªë may m·∫Øn v√† th·ªùi ti·∫øt H√† N·ªôi.'),
    
    async execute(interaction) {
        await interaction.reply({ content: 'üîç ƒêang thu th·∫≠p th√¥ng tin...', fetchReply: true });

        // Ki·ªÉm tra ping bot & API
        const sent = await interaction.fetchReply();
        const botLatency = sent.createdTimestamp - interaction.createdTimestamp;
        const apiLatency = Math.round(interaction.client.ws.ping);

        // X√°c ƒë·ªãnh tr·∫°ng th√°i bot d·ª±a tr√™n ping
        let botStatus;
        if (botLatency < 100) {
            botStatus = "üü¢ Bot ·ªïn ƒë·ªãnh";
        } else if (botLatency >= 200 && botLatency <= 500) {
            botStatus = "üü† Bot h∆°i lag";
        } else {
            botStatus = "üî¥ Bot ƒë√£ isekai!";
        }

        // L·∫•y s·ªë may m·∫Øn t·ª´ API
        let luckyNumber = "ƒêang t·∫£i...";
        try {
            const luckyResponse = await axios.get('https://huu-tri-api.onrender.com/somayman?nhonhat=1&lonnhat=30');
            luckyNumber = luckyResponse.data.luckynumber;
        } catch (error) {
            luckyNumber = "Kh√¥ng l·∫•y ƒë∆∞·ª£c s·ªë may m·∫Øn üò¢";
        }

        // L·∫•y d·ªØ li·ªáu th·ªùi ti·∫øt t·∫°i H√† N·ªôi t·ª´ API
        let weatherInfo = {};
        try {
            const weatherResponse = await axios.get('https://kaiz-apis.gleeze.com/api/weather?q=hanoi');
            const weather = weatherResponse.data;
            const current = weather.current;
            weatherInfo = {
                location: weather.location.name,
                temperature: `${current.feelslike}¬∞C`,
                humidity: `${current.humidity}%`,
                wind: current.winddisplay,
                date: `${current.day}, ${current.date}`
            };
        } catch (error) {
            weatherInfo = {
                location: "Kh√¥ng x√°c ƒë·ªãnh",
                temperature: "N/A",
                humidity: "N/A",
                wind: "N/A",
                date: "Kh√¥ng c√≥ d·ªØ li·ªáu"
            };
        }

        // X√°c ƒë·ªãnh t√¨nh tr·∫°ng th·ªùi ti·∫øt h√¥m nay: M∆∞a üåßÔ∏è ho·∫∑c N·∫Øng ‚òÄÔ∏è
        const weatherToday = Math.random() < 0.5 ? "‚òÄÔ∏è Tr·ªùi n·∫Øng" : "üåßÔ∏è Tr·ªùi m∆∞a";

        // X√°c ƒë·ªãnh t√¢m tr·∫°ng ng√†y h√¥m nay: T·ªìi t·ªá üò≠, B√¨nh th∆∞·ªùng üòê, Vui v·∫ª üòÑ
        const moods = ["üò≠ M·ªôt ng√†y t·ªìi t·ªá", "üòê M·ªôt ng√†y b√¨nh th∆∞·ªùng", "üòÑ M·ªôt ng√†y vui v·∫ª"];
        const todayMood = moods[Math.floor(Math.random() * moods.length)];

        // Th√¥ng tin server
        const guild = interaction.guild;
        const serverOwner = `<@${guild.ownerId}>` || "Kh√¥ng x√°c ƒë·ªãnh";
        const memberCount = guild.memberCount;
        const serverRegion = guild.preferredLocale;

        // Embed th√¥ng tin bot, server, th·ªùi ti·∫øt, v√† s·ªë may m·∫Øn
        const embed = new EmbedBuilder()
            .setColor(botLatency < 100 ? 'Green' : botLatency < 500 ? 'Orange' : 'Red')
            .setTitle('üì° Ki·ªÉm Tra Bot')
            .addFields(
                { name: 'ü§ñ T√™n Bot', value: 'LMS Bot', inline: true },
                { name: 'üëë Ch·ªß Bot', value: 'LMS', inline: true },
                { name: 'üìä ƒê·ªô Tr·ªÖ Bot', value: `${botLatency}ms`, inline: true },
                { name: 'üåê ƒê·ªô Tr·ªÖ API', value: `${apiLatency}ms`, inline: true },
                { name: 'üìå Tr·∫°ng th√°i', value: botStatus, inline: true },
                { name: 'üé≤ S·ªë May M·∫Øn', value: `üî¢ ${luckyNumber}`, inline: true },
                { name: 'üìç V·ªã tr√≠', value: weatherInfo.location, inline: true },
                { name: 'üå° C·∫£m gi√°c nh∆∞', value: weatherInfo.temperature, inline: true },
                { name: 'üíß ƒê·ªô ·∫©m', value: weatherInfo.humidity, inline: true },
                { name: 'üí® Gi√≥', value: weatherInfo.wind, inline: true },
                { name: 'üìÖ Ng√†y', value: weatherInfo.date, inline: true },
                { name: 'üå¶Ô∏è Th·ªùi ti·∫øt h√¥m nay', value: weatherToday, inline: true },
                { name: 'üé≠ D·ª± b√°o ng√†y', value: todayMood, inline: true },
                { name: 'üåç Sever', value: guild.name, inline: true },
                { name: 'üìç V√πng ƒê·∫•t', value: serverRegion, inline: true },
                { name: 'üë• S·ªë Th√†nh Vi√™n', value: `${memberCount}`, inline: true },
                { name: 'üíº Ch·ªß Sever', value: serverOwner, inline: true },
                { name: 'üÜî ID Sever', value: guild.id, inline: true }
            )
            .setThumbnail(guild.iconURL())
            .setTimestamp();

        await interaction.editReply({ content: null, embeds: [embed] });
    },
};

