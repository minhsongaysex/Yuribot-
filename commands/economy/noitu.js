const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');
const axios = require('axios');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('noituvuive')
        .setDescription('Ch∆°i tr√≤ n·ªëi t·ª´ v·ªõi bot')
        .addStringOption(option =>
            option.setName('word')
                .setDescription('Nh·∫≠p t·ª´ ƒë·ªÉ b·∫Øt ƒë·∫ßu')
                .setRequired(true)),

    async execute(interaction) {
        await interaction.deferReply();
        let word = interaction.options.getString('word'); // T·ª´ ng∆∞·ªùi ch∆°i nh·∫≠p ban ƒë·∫ßu

        try {
            let apiUrl = `https://subhatde.id.vn/game/linkword?word=${encodeURIComponent(word)}`;
            let response = await axios.get(apiUrl);

            if (response.data.error) {
                return interaction.editReply(`‚ùå **L·ªói:** ${response.data.error}`);
            }

            let data = response.data.data;
            let botWord = data.text; // T·ª´ c·ªßa bot
            let expectedHead = data.tail; // Ng∆∞·ªùi ch∆°i ph·∫£i n·ªëi ti·∫øp b·∫±ng t·ª´ b·∫Øt ƒë·∫ßu v·ªõi ph·∫ßn cu·ªëi c·ªßa t·ª´ bot

            const embed = new EmbedBuilder()
                .setColor('Blue')
                .setTitle('üîó Tr√≤ ch∆°i n·ªëi t·ª´')
                .setDescription(`
                    üìù **T·ª´ c·ªßa b·∫°n:** ${word}
                    ü§ñ **T·ª´ c·ªßa bot:** ${botWord}
                    üîÑ **H√£y n·ªëi ti·∫øp b·∫±ng m·ªôt t·ª´ b·∫Øt ƒë·∫ßu v·ªõi: "${expectedHead}"!**
                    
                    ‚è≥ B·∫°n c√≥ **30 gi√¢y** ƒë·ªÉ ph·∫£n h·ªìi!
                `)
                .setFooter({ text: 'Tr·∫£ l·ªùi tin nh·∫Øn n√†y ƒë·ªÉ ti·∫øp t·ª•c n·ªëi t·ª´!' });

            await interaction.editReply({ embeds: [embed] });

            // Thu th·∫≠p ph·∫£n h·ªìi t·ª´ ng∆∞·ªùi ch∆°i
            const filter = msg => msg.author.id === interaction.user.id;
            const collector = interaction.channel.createMessageCollector({ filter, time: 30000 });

            collector.on('collect', async msg => {
                let playerWord = msg.content.trim();

                // Ki·ªÉm tra n·∫øu t·ª´ ng∆∞·ªùi ch∆°i kh√¥ng b·∫Øt ƒë·∫ßu b·∫±ng ph·∫ßn cu·ªëi c·ªßa t·ª´ bot
                if (!playerWord.startsWith(expectedHead + " ")) {
                    return msg.reply(`‚ùå **T·ª´ c·ªßa b·∫°n ph·∫£i b·∫Øt ƒë·∫ßu b·∫±ng "${expectedHead}"!**`);
                }

                try {
                    apiUrl = `https://subhatde.id.vn/game/linkword?word=${encodeURIComponent(playerWord)}`;
                    response = await axios.get(apiUrl);

                    if (response.data.error) {
                        return msg.reply(`‚ùå **L·ªói:** ${response.data.error}`);
                    }

                    data = response.data.data;
                    botWord = data.text;
                    expectedHead = data.tail;

                    // C·∫≠p nh·∫≠t Embed v·ªõi t·ª´ m·ªõi
                    const newEmbed = new EmbedBuilder()
                        .setColor('Blue')
                        .setTitle('üîó Tr√≤ ch∆°i n·ªëi t·ª´')
                        .setDescription(`
                            üìù **T·ª´ c·ªßa b·∫°n:** ${playerWord}
                            ü§ñ **T·ª´ c·ªßa bot:** ${botWord}
                            üîÑ **H√£y n·ªëi ti·∫øp b·∫±ng m·ªôt t·ª´ b·∫Øt ƒë·∫ßu v·ªõi: "${expectedHead}"!**
                            
                            ‚è≥ B·∫°n c√≥ **30 gi√¢y** ƒë·ªÉ ph·∫£n h·ªìi!
                        `)
                        .setFooter({ text: 'Tr·∫£ l·ªùi tin nh·∫Øn n√†y ƒë·ªÉ ti·∫øp t·ª•c n·ªëi t·ª´!' });

                    await interaction.editReply({ embeds: [newEmbed] });

                } catch (error) {
                    console.error(error);
                    return msg.reply('‚ùå C√≥ l·ªói x·∫£y ra khi ki·ªÉm tra t·ª´ n·ªëi ti·∫øp!');
                }
            });

            collector.on('end', collected => {
                if (collected.size === 0) {
                    interaction.editReply({ content: '‚è≥ **B·∫°n ƒë√£ h·∫øt th·ªùi gian!** Tr√≤ ch∆°i k·∫øt th√∫c.', embeds: [] });
                }
            });

        } catch (error) {
            console.error(error);
            await interaction.editReply('‚ùå C√≥ l·ªói x·∫£y ra khi g·ªçi API n·ªëi t·ª´!');
        }
    }
};
