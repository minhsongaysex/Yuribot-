const { SlashCommandBuilder, AttachmentBuilder, EmbedBuilder } = require('discord.js');
const fetch = (...args) => import('node-fetch').then(({ default: fetch }) => fetch(...args));

module.exports = {
  data: new SlashCommandBuilder()
    .setName('4k')
    .setDescription('TƒÉng c∆∞·ªùng ch·∫•t l∆∞·ª£ng h√¨nh ·∫£nh b·∫±ng API upscale.')
    .addStringOption(option =>
      option.setName('imageurl')
        .setDescription('Nh·∫≠p URL c·ªßa h√¨nh ·∫£nh c·∫ßn tƒÉng c∆∞·ªùng ch·∫•t l∆∞·ª£ng')
        .setRequired(true)
    ),
  async execute(interaction) {
    const imageUrl = interaction.options.getString('imageurl');
    const requestTime = new Date();
    await interaction.deferReply();

    try {
      const apiUrl = `https://kaiz-apis.gleeze.com/api/upscale?imageUrl=${encodeURIComponent(imageUrl)}`;
      const response = await fetch(apiUrl);
      if (!response.ok) {
        return interaction.editReply('‚ùå C√≥ l·ªói khi g·ªçi API upscale.');
      }
      const buffer = await response.buffer();
      const attachment = new AttachmentBuilder(buffer, { name: 'upscaled.png' });

      const embed = new EmbedBuilder()
        .setTitle('H√¨nh ·∫£nh ƒë√£ ƒë∆∞·ª£c tƒÉng c∆∞·ªùng ch·∫•t l∆∞·ª£ng')
        .setDescription(`H√¨nh ·∫£nh g·ªëc: ${imageUrl}`)
        .setImage('attachment://upscaled.png')
        .addFields(
          { name: '‚ö†Ô∏è===Ng∆∞·ªùi y√™u c·∫ßu===‚ö†Ô∏è', value: `<@${interaction.user.id}>`, inline: true },
          { name: 'üåè===Th·ªùi gian y√™u c·∫ßu===‚åö', value: requestTime.toLocaleString(), inline: true }
        )
        .setFooter({ text: `ƒê∆∞·ª£c t·∫°o b·ªüi ${interaction.user.tag}` })
        .setTimestamp(); // Hi·ªÉn th·ªã th·ªùi gian tr·∫£ v·ªÅ c·ªßa l·ªánh

      await interaction.editReply({ embeds: [embed], files: [attachment] });
    } catch (error) {
      console.error('L·ªói khi g·ªçi API upscale:', error);
      await interaction.editReply('‚ùå ƒê√£ x·∫£y ra l·ªói khi x·ª≠ l√Ω h√¨nh ·∫£nh.');
    }
  }
};
