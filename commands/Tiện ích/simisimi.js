const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');
const axios = require('axios');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('sim')
        .setDescription('Giao ti·∫øp v·ªõi Sim')
        .addSubcommand(subcommand =>
            subcommand
                .setName('ask')
                .setDescription('H·ªèi Sim m·ªôt c√¢u h·ªèi')
                .addStringOption(option =>
                    option.setName('question')
                        .setDescription('Nh·∫≠p c√¢u h·ªèi c·ªßa b·∫°n')
                        .setRequired(true)))
        .addSubcommand(subcommand =>
            subcommand
                .setName('teach')
                .setDescription('D·∫°y Sim m·ªôt c√¢u h·ªèi v√† c√¢u tr·∫£ l·ªùi m·ªõi')
                .addStringOption(option =>
                    option.setName('question')
                        .setDescription('Nh·∫≠p c√¢u h·ªèi m·ªõi')
                        .setRequired(true))
                .addStringOption(option =>
                    option.setName('answer')
                        .setDescription('Nh·∫≠p c√¢u tr·∫£ l·ªùi c·ªßa Sim')
                        .setRequired(true))),

    async execute(interaction) {
        await interaction.deferReply();
        const subcommand = interaction.options.getSubcommand();

        try {
            if (subcommand === 'ask') {
                const question = encodeURIComponent(interaction.options.getString('question'));
                const apiUrl = `https://subhatde.id.vn/sim?type=ask&ask=${question}`;
                const response = await axios.get(apiUrl);

                if (!response.data.answer) {
                    return interaction.editReply('‚ùå Sim kh√¥ng c√≥ c√¢u tr·∫£ l·ªùi cho c√¢u h·ªèi n√†y!');
                }

                const embed = new EmbedBuilder()
                    .setColor('Blue')
                    .setTitle('üó£ H·ªèi Sim')
                    .setDescription(`**‚ùì B·∫°n:** ${decodeURIComponent(question)}\n**ü§ñ Sim:** ${response.data.answer}`)
                    .setFooter({ text: 'D·ªØ li·ªáu t·ª´ subhatde.id.vn' });

                await interaction.editReply({ embeds: [embed] });
            }

            else if (subcommand === 'teach') {
                const question = encodeURIComponent(interaction.options.getString('question'));
                const answer = encodeURIComponent(interaction.options.getString('answer'));
                const apiUrl = `https://subhatde.id.vn/sim?type=teach&ask=${question}&ans=${answer}`;
                const response = await axios.get(apiUrl);

                if (response.data.error) {
                    return interaction.editReply(`‚ùå **L·ªói:** ${response.data.error}`);
                }

                const embed = new EmbedBuilder()
                    .setColor('Green')
                    .setTitle('üìö D·∫°y Sim')
                    .setDescription(`‚úÖ **D·∫°y Sim th√†nh c√¥ng!**\n\n**‚ùì C√¢u h·ªèi:** ${decodeURIComponent(question)}\n**üí¨ Tr·∫£ l·ªùi:** ${decodeURIComponent(answer)}`)
                    .setFooter({ text: 'D·ªØ li·ªáu t·ª´ subhatde.id.vn' });

                await interaction.editReply({ embeds: [embed] });
            }

        } catch (error) {
            console.error(error);
            await interaction.editReply('‚ùå C√≥ l·ªói x·∫£y ra khi g·ªçi API Sim!');
        }
    }
};
